#!/bin/bash

# Function to check clusters with only one member and handle them accordingly
function checkGroupOneMember {
    echo " [RUN] Checking clusters with only one member"

    local seqs=$(awk '$6 <= 2 {print $7}' "$CLUSTER_FILE" | tr ',' ' ')

    for seq in $seqs; do
        echo "    [WARNING] Cluster with one sequence: $seq"
        echo "$seq" >> "$UNCLUSTERED_SEQS"
    done

    # Remove clusters with one member
    awk '$6 > 2' "$CLUSTER_FILE" > tmp_cluster.txt && mv tmp_cluster.txt "$CLUSTER_FILE"
}

# Set variables
SEQ_TMP=$2
CLUSTER_FILE="cluster.txt"
CLUSTER_VS_SPECIES_TABLE="clusterTable.csv"
SIMILARITY_FILE=$1
AA_FILE=$2  # Path to aa_file
NN_FILE=$3  # Path to nn_file

HCLUSTER_CMD="hcluster_sg"
BLAST_CMD="blastpgp"
FORMATDB_CMD="formatdb"
CLUSTER2TABLE_CMD="summary_cluster.pl"
SPLIT_CMD="splitFasta2singleSeq.pl"

BLAST_THE="1e-3"
MIN_EDGE_WEIGHT=20
MIN_EDGE_DENSITY=0.8

# Cluster sequences by HCluster
echo " [RUN] HCluster"
SPECIES_NUM=$3
echo "$SPECIES_NUM sequences"
echo "Similarity file: $SIMILARITY_FILE"
$HCLUSTER_CMD -w $MIN_EDGE_WEIGHT -o $CLUSTER_FILE -s $MIN_EDGE_DENSITY "$SIMILARITY_FILE"

if [ -e "$CLUSTER_FILE" ]; then
    checkGroupOneMember
    echo "  [INFO] Number of clusters: $(wc -l < "$CLUSTER_FILE")"
else
    echo "  [ERROR] No $CLUSTER_FILE, failed in HCluster"
    exit 1
fi

# Create group vs species table for analysis
$CLUSTER2TABLE_CMD "$CLUSTER_FILE" > "$CLUSTER_VS_SPECIES_TABLE"

# Identify sequences not included in any cluster
echo "Identifying sequences not included in any cluster..."

# Set variables
SEQ_TMP=$2  # This is your full sequence dataset
UNCLUSTERED_SEQS="unclustered_seqs.fasta"

# 提取已分群的序列ID
awk -F'\t' '{gsub(/\r|\n/, "", $7); split($7, a, ","); for (i in a) print a[i]}' "$CLUSTER_FILE" > clustered_seq_ids.txt

echo "Clustered Sequence IDs:"
cat clustered_seq_ids.txt

# 从原始序列文件中删除已分类的序列
awk 'BEGIN{while((getline < "clustered_seq_ids.txt") > 0) clustered[$1] = 1} /^>/ {p = !(substr($1, 2) in clustered)} p' "$SEQ_TMP" > "$UNCLUSTERED_SEQS"

echo "Unclustered Sequences saved to $UNCLUSTERED_SEQS:"
cat "$UNCLUSTERED_SEQS"

# Filter out low similarity sequences from aa_file and nn_file
awk 'NR==FNR{a[substr($1,2)];next} /^>/{flag=!(substr($1,2) in a)} flag' "$UNCLUSTERED_SEQS" "$AA_FILE" > filtered_aa_file.fasta
awk 'NR==FNR{a[substr($1,2)];next} /^>/{flag=!(substr($1,2) in a)} flag' "$UNCLUSTERED_SEQS" "$NN_FILE" > filtered_nn_file.fasta

# Output the filtered files for further processing
mv filtered_aa_file.fasta aa_file_filtered.fasta
mv filtered_nn_file.fasta nn_file_filtered.fasta
